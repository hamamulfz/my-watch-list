// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i26;
import 'dart:typed_data' as _i27;

import 'package:dartz/dartz.dart' as _i2;
import 'package:data_connection_checker/data_connection_checker.dart' as _i7;
import 'package:ditonton/common/failure.dart' as _i10;
import 'package:ditonton/common/network_info.dart' as _i25;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i24;
import 'package:ditonton/data/datasources/movie_local_data_source.dart' as _i15;
import 'package:ditonton/data/datasources/movie_remote_data_source.dart'
    as _i13;
import 'package:ditonton/data/datasources/tv_local_data_source.dart' as _i22;
import 'package:ditonton/data/datasources/tv_remote_data_source.dart' as _i20;
import 'package:ditonton/data/models/movie_detail_response.dart' as _i3;
import 'package:ditonton/data/models/movie_model.dart' as _i14;
import 'package:ditonton/data/models/movie_table.dart' as _i16;
import 'package:ditonton/data/models/tv_show_detail_response.dart' as _i4;
import 'package:ditonton/data/models/tv_show_model.dart' as _i21;
import 'package:ditonton/data/models/tv_show_table.dart' as _i23;
import 'package:ditonton/domain/entities/movie.dart' as _i11;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i12;
import 'package:ditonton/domain/entities/tv_show.dart' as _i18;
import 'package:ditonton/domain/entities/tv_show_detail.dart' as _i19;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i8;
import 'package:ditonton/domain/repositories/tv_show_repository.dart' as _i17;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTVShowDetailResponse_2 extends _i1.SmartFake
    implements _i4.TVShowDetailResponse {
  _FakeTVShowDetailResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDatabase_3 extends _i1.SmartFake implements _i5.Database {
  _FakeDatabase_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_5 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQueryCursor_6 extends _i1.SmartFake implements _i5.QueryCursor {
  _FakeQueryCursor_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeBatch_7 extends _i1.SmartFake implements _i5.Batch {
  _FakeBatch_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDuration_8 extends _i1.SmartFake implements Duration {
  _FakeDuration_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAddressCheckResult_9 extends _i1.SmartFake
    implements _i7.AddressCheckResult {
  _FakeAddressCheckResult_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i8.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
              Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
                          this, Invocation.method(#getNowPlayingMovies, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
                          this, Invocation.method(#getPopularMovies, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
                          this, Invocation.method(#getTopRatedMovies, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>> getDetailMovie(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getDetailMovie, [id]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>.value(
                      _FakeEither_0<_i10.Failure, _i12.MovieDetail>(
                          this, Invocation.method(#getDetailMovie, [id]))))
          as _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getRecommendationsMovie(int? id) => (super.noSuchMethod(
              Invocation.method(#getRecommendationsMovie, [id]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(this,
                          Invocation.method(#getRecommendationsMovie, [id]))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
                          this, Invocation.method(#searchMovies, [query]))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> saveWatchlistMovie(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistMovie, [movie]),
              returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>(
                      this, Invocation.method(#saveWatchlistMovie, [movie]))))
          as _i9.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> removeWatchlistMovie(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistMovie, [movie]),
              returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>(
                      this, Invocation.method(#removeWatchlistMovie, [movie]))))
          as _i9.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i9.Future<bool> isAddedToWatchlistMovie(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlistMovie, [id]),
          returnValue: _i9.Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
                          this, Invocation.method(#getWatchlistMovies, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i13.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i14.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]))
          as _i9.Future<List<_i14.MovieModel>>);
  @override
  _i9.Future<List<_i14.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]))
          as _i9.Future<List<_i14.MovieModel>>);
  @override
  _i9.Future<List<_i14.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]))
          as _i9.Future<List<_i14.MovieModel>>);
  @override
  _i9.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: _i9.Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1(
                      this, Invocation.method(#getMovieDetail, [id]))))
          as _i9.Future<_i3.MovieDetailResponse>);
  @override
  _i9.Future<List<_i14.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]))
          as _i9.Future<List<_i14.MovieModel>>);
  @override
  _i9.Future<List<_i14.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]))
          as _i9.Future<List<_i14.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i15.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> insertWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i9.Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<String> removeWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: _i9.Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<_i16.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i9.Future<_i16.MovieTable?>.value())
          as _i9.Future<_i16.MovieTable?>);
  @override
  _i9.Future<List<_i16.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i9.Future<List<_i16.MovieTable>>.value(<_i16.MovieTable>[]))
          as _i9.Future<List<_i16.MovieTable>>);
  @override
  _i9.Future<void> cacheNowPlayingMovies(List<_i16.MovieTable>? movies) =>
      (super.noSuchMethod(Invocation.method(#cacheNowPlayingMovies, [movies]),
              returnValue: _i9.Future<void>.value(),
              returnValueForMissingStub: _i9.Future<void>.value())
          as _i9.Future<void>);
  @override
  _i9.Future<List<_i16.MovieTable>> getCachedNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getCachedNowPlayingMovies, []),
              returnValue:
                  _i9.Future<List<_i16.MovieTable>>.value(<_i16.MovieTable>[]))
          as _i9.Future<List<_i16.MovieTable>>);
}

/// A class which mocks [TvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRepository extends _i1.Mock implements _i17.TvShowRepository {
  MockTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>
      getNowPlayingTvShow() => (super.noSuchMethod(
              Invocation.method(#getNowPlayingTvShow, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(
                          this, Invocation.method(#getNowPlayingTvShow, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>> getPopularTvShow() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShow, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(
                          this, Invocation.method(#getPopularTvShow, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>> getTopRatedTvShow() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShow, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(
                          this, Invocation.method(#getTopRatedTvShow, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i19.TVShowDetail>> getDetailTvShow(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getDetailTvShow, [id]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, _i19.TVShowDetail>>.value(
                      _FakeEither_0<_i10.Failure, _i19.TVShowDetail>(
                          this, Invocation.method(#getDetailTvShow, [id]))))
          as _i9.Future<_i2.Either<_i10.Failure, _i19.TVShowDetail>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>
      getRecommendationsTvShow(int? id) => (super.noSuchMethod(
              Invocation.method(#getRecommendationsTvShow, [id]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(this,
                          Invocation.method(#getRecommendationsTvShow, [id]))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>> searchTvShow(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShow, [query]),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(
                          this, Invocation.method(#searchTvShow, [query]))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> saveWatchlistTvShow(
          _i19.TVShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistTvShow, [tvShow]),
              returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>(
                      this, Invocation.method(#saveWatchlistTvShow, [tvShow]))))
          as _i9.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> removeWatchlistTvShow(
          _i19.TVShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTvShow, [tvShow]),
              returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>(this,
                      Invocation.method(#removeWatchlistTvShow, [tvShow]))))
          as _i9.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i9.Future<bool> isAddedToWatchlistTvShow(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlistTvShow, [id]),
          returnValue: _i9.Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>
      getWatchlistTvShow() => (super.noSuchMethod(
              Invocation.method(#getWatchlistTvShow, []),
              returnValue:
                  _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i18.TvShow>>(
                          this, Invocation.method(#getWatchlistTvShow, []))))
          as _i9.Future<_i2.Either<_i10.Failure, List<_i18.TvShow>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i20.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i21.TVShowModel>> getNowPlayingTvs() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingTvs, []),
          returnValue:
              _i9.Future<List<_i21.TVShowModel>>.value(<_i21.TVShowModel>[]))
      as _i9.Future<List<_i21.TVShowModel>>);
  @override
  _i9.Future<List<_i21.TVShowModel>> getPopularTvs() => (super.noSuchMethod(
          Invocation.method(#getPopularTvs, []),
          returnValue:
              _i9.Future<List<_i21.TVShowModel>>.value(<_i21.TVShowModel>[]))
      as _i9.Future<List<_i21.TVShowModel>>);
  @override
  _i9.Future<List<_i21.TVShowModel>> getTopRatedTvs() => (super.noSuchMethod(
          Invocation.method(#getTopRatedTvs, []),
          returnValue:
              _i9.Future<List<_i21.TVShowModel>>.value(<_i21.TVShowModel>[]))
      as _i9.Future<List<_i21.TVShowModel>>);
  @override
  _i9.Future<_i4.TVShowDetailResponse> getDetailTvs(int? id) =>
      (super.noSuchMethod(Invocation.method(#getDetailTvs, [id]),
              returnValue: _i9.Future<_i4.TVShowDetailResponse>.value(
                  _FakeTVShowDetailResponse_2(
                      this, Invocation.method(#getDetailTvs, [id]))))
          as _i9.Future<_i4.TVShowDetailResponse>);
  @override
  _i9.Future<List<_i21.TVShowModel>> getRecommendationsTvs(int? id) =>
      (super.noSuchMethod(Invocation.method(#getRecommendationsTvs, [id]),
          returnValue: _i9.Future<List<_i21.TVShowModel>>.value(
              <_i21.TVShowModel>[])) as _i9.Future<List<_i21.TVShowModel>>);
  @override
  _i9.Future<List<_i21.TVShowModel>> searchTvs(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvs, [query]),
          returnValue: _i9.Future<List<_i21.TVShowModel>>.value(
              <_i21.TVShowModel>[])) as _i9.Future<List<_i21.TVShowModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i22.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> insertWatchlist(_i23.TVShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvShow]),
          returnValue: _i9.Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<String> removeWatchlist(_i23.TVShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
          returnValue: _i9.Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<_i23.TVShowTable?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i9.Future<_i23.TVShowTable?>.value())
          as _i9.Future<_i23.TVShowTable?>);
  @override
  _i9.Future<List<_i23.TVShowTable>> getWatchlistTvs() => (super.noSuchMethod(
          Invocation.method(#getWatchlistTvs, []),
          returnValue:
              _i9.Future<List<_i23.TVShowTable>>.value(<_i23.TVShowTable>[]))
      as _i9.Future<List<_i23.TVShowTable>>);
  @override
  _i9.Future<void> cacheNowPlayingTvs(List<_i23.TVShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cacheNowPlayingTvs, [tvShows]),
              returnValue: _i9.Future<void>.value(),
              returnValueForMissingStub: _i9.Future<void>.value())
          as _i9.Future<void>);
  @override
  _i9.Future<List<_i23.TVShowTable>> getCachedNowPlayingTvs() =>
      (super.noSuchMethod(Invocation.method(#getCachedNowPlayingTvs, []),
          returnValue: _i9.Future<List<_i23.TVShowTable>>.value(
              <_i23.TVShowTable>[])) as _i9.Future<List<_i23.TVShowTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i24.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set db(_i5.Database? _db) => super.noSuchMethod(Invocation.setter(#db, _db),
      returnValueForMissingStub: null);
  @override
  _i9.Future<_i5.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i9.Future<_i5.Database?>.value())
          as _i9.Future<_i5.Database?>);
  @override
  _i9.Future<dynamic> initialize(String? path) =>
      (super.noSuchMethod(Invocation.method(#initialize, [path]),
          returnValue: _i9.Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<_i5.Database> initDb([dynamic otherPath]) => (super.noSuchMethod(
          Invocation.method(#initDb, [otherPath]),
          returnValue: _i9.Future<_i5.Database>.value(
              _FakeDatabase_3(this, Invocation.method(#initDb, [otherPath]))))
      as _i9.Future<_i5.Database>);
  @override
  _i9.Future<int> insertMovieWatchlist(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(#insertMovieWatchlist, [data]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> insertTvWatchlist(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(#insertTvWatchlist, [data]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> removeMovieWatchlist(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [data]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> removeTvWatchlist(Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(#removeTvWatchlist, [data]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i9.Future<Map<String, dynamic>?>.value())
          as _i9.Future<Map<String, dynamic>?>);
  @override
  _i9.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i9.Future<Map<String, dynamic>?>.value())
          as _i9.Future<Map<String, dynamic>?>);
  @override
  _i9.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i9.Future<List<Map<String, dynamic>>>);
  @override
  _i9.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvs, []),
              returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i9.Future<List<Map<String, dynamic>>>);
  @override
  _i9.Future<void> insertCacheTransactionMovie(
          List<Map<String, dynamic>>? movies, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertCacheTransactionMovie, [movies, category]),
          returnValue: _i9.Future<void>.value(),
          returnValueForMissingStub:
              _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> insertCacheTransactionTv(
          List<Map<String, dynamic>>? movies, String? category) =>
      (super.noSuchMethod(
              Invocation.method(#insertCacheTransactionTv, [movies, category]),
              returnValue: _i9.Future<void>.value(),
              returnValueForMissingStub: _i9.Future<void>.value())
          as _i9.Future<void>);
  @override
  _i9.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheMovies, [category]),
              returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i9.Future<List<Map<String, dynamic>>>);
  @override
  _i9.Future<List<Map<String, dynamic>>> getCacheTvs(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheTvs, [category]),
              returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i9.Future<List<Map<String, dynamic>>>);
  @override
  _i9.Future<int> clearCacheMovie(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheMovie, [category]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> clearCacheTv(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheTv, [category]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i25.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i9.Future<bool>.value(false)) as _i9.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i6.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i9.Future<_i6.Response>);
  @override
  _i9.Future<_i6.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i9.Future<_i6.Response>);
  @override
  _i9.Future<_i6.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i26.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i9.Future<_i6.Response>);
  @override
  _i9.Future<_i6.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i26.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i9.Future<_i6.Response>);
  @override
  _i9.Future<_i6.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i26.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i9.Future<_i6.Response>);
  @override
  _i9.Future<_i6.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i26.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i9.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i9.Future<_i6.Response>);
  @override
  _i9.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i9.Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<_i27.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i9.Future<_i27.Uint8List>.value(_i27.Uint8List(0)))
          as _i9.Future<_i27.Uint8List>);
  @override
  _i9.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i9.Future<_i6.StreamedResponse>.value(
                  _FakeStreamedResponse_5(
                      this, Invocation.method(#send, [request]))))
          as _i9.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i5.Database {
  MockDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(Invocation.getter(#path), returnValue: '') as String);
  @override
  bool get isOpen =>
      (super.noSuchMethod(Invocation.getter(#isOpen), returnValue: false)
          as bool);
  @override
  _i9.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<T> transaction<T>(_i9.Future<T> Function(_i5.Transaction)? action,
          {bool? exclusive}) =>
      (super.noSuchMethod(
          Invocation.method(#transaction, [action], {#exclusive: exclusive}),
          returnValue: _i9.Future<T>.value(null)) as _i9.Future<T>);
  @override
  _i9.Future<int> getVersion() =>
      (super.noSuchMethod(Invocation.method(#getVersion, []),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<void> setVersion(int? version) => (super.noSuchMethod(
      Invocation.method(#setVersion, [version]),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<T> devInvokeMethod<T>(String? method, [dynamic arguments]) =>
      (super.noSuchMethod(
          Invocation.method(#devInvokeMethod, [method, arguments]),
          returnValue: _i9.Future<T>.value(null)) as _i9.Future<T>);
  @override
  _i9.Future<T> devInvokeSqlMethod<T>(String? method, String? sql,
          [List<Object?>? arguments]) =>
      (super.noSuchMethod(
          Invocation.method(#devInvokeSqlMethod, [method, sql, arguments]),
          returnValue: _i9.Future<T>.value(null)) as _i9.Future<T>);
  @override
  _i9.Future<void> execute(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(Invocation.method(#execute, [sql, arguments]),
              returnValue: _i9.Future<void>.value(),
              returnValueForMissingStub: _i9.Future<void>.value())
          as _i9.Future<void>);
  @override
  _i9.Future<int> rawInsert(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(Invocation.method(#rawInsert, [sql, arguments]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> insert(String? table, Map<String, Object?>? values,
          {String? nullColumnHack, _i5.ConflictAlgorithm? conflictAlgorithm}) =>
      (super.noSuchMethod(
          Invocation.method(#insert, [
            table,
            values
          ], {
            #nullColumnHack: nullColumnHack,
            #conflictAlgorithm: conflictAlgorithm
          }),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<List<Map<String, Object?>>> query(String? table,
          {bool? distinct,
          List<String>? columns,
          String? where,
          List<Object?>? whereArgs,
          String? groupBy,
          String? having,
          String? orderBy,
          int? limit,
          int? offset}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [
                table
              ], {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset
              }),
              returnValue: _i9.Future<List<Map<String, Object?>>>.value(
                  <Map<String, Object?>>[]))
          as _i9.Future<List<Map<String, Object?>>>);
  @override
  _i9.Future<List<Map<String, Object?>>> rawQuery(String? sql,
          [List<Object?>? arguments]) =>
      (super.noSuchMethod(Invocation.method(#rawQuery, [sql, arguments]),
              returnValue: _i9.Future<List<Map<String, Object?>>>.value(
                  <Map<String, Object?>>[]))
          as _i9.Future<List<Map<String, Object?>>>);
  @override
  _i9.Future<_i5.QueryCursor> rawQueryCursor(
          String? sql, List<Object?>? arguments, {int? bufferSize}) =>
      (super.noSuchMethod(Invocation.method(#rawQueryCursor, [sql, arguments], {#bufferSize: bufferSize}),
          returnValue: _i9.Future<_i5.QueryCursor>.value(_FakeQueryCursor_6(
              this,
              Invocation.method(#rawQueryCursor, [sql, arguments],
                  {#bufferSize: bufferSize})))) as _i9.Future<_i5.QueryCursor>);
  @override
  _i9.Future<_i5.QueryCursor> queryCursor(String? table,
          {bool? distinct,
          List<String>? columns,
          String? where,
          List<Object?>? whereArgs,
          String? groupBy,
          String? having,
          String? orderBy,
          int? limit,
          int? offset,
          int? bufferSize}) =>
      (super.noSuchMethod(
          Invocation.method(#queryCursor, [
            table
          ], {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
            #bufferSize: bufferSize
          }),
          returnValue: _i9.Future<_i5.QueryCursor>.value(_FakeQueryCursor_6(
              this,
              Invocation.method(#queryCursor, [
                table
              ], {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
                #bufferSize: bufferSize
              })))) as _i9.Future<_i5.QueryCursor>);
  @override
  _i9.Future<int> rawUpdate(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(Invocation.method(#rawUpdate, [sql, arguments]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> update(String? table, Map<String, Object?>? values,
          {String? where,
          List<Object?>? whereArgs,
          _i5.ConflictAlgorithm? conflictAlgorithm}) =>
      (super.noSuchMethod(
          Invocation.method(#update, [
            table,
            values
          ], {
            #where: where,
            #whereArgs: whereArgs,
            #conflictAlgorithm: conflictAlgorithm
          }),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> rawDelete(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(Invocation.method(#rawDelete, [sql, arguments]),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i9.Future<int> delete(String? table,
          {String? where, List<Object?>? whereArgs}) =>
      (super.noSuchMethod(
          Invocation.method(
              #delete, [table], {#where: where, #whereArgs: whereArgs}),
          returnValue: _i9.Future<int>.value(0)) as _i9.Future<int>);
  @override
  _i5.Batch batch() => (super.noSuchMethod(Invocation.method(#batch, []),
          returnValue: _FakeBatch_7(this, Invocation.method(#batch, [])))
      as _i5.Batch);
}

/// A class which mocks [Sqflite].
///
/// See the documentation for Mockito's code generation for more information.
class MockSqflite extends _i1.Mock implements _i5.Sqflite {
  MockSqflite() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [DataConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataConnectionChecker extends _i1.Mock
    implements _i7.DataConnectionChecker {
  MockDataConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.AddressCheckOptions> get addresses =>
      (super.noSuchMethod(Invocation.getter(#addresses),
              returnValue: <_i7.AddressCheckOptions>[])
          as List<_i7.AddressCheckOptions>);
  @override
  set addresses(List<_i7.AddressCheckOptions>? _addresses) =>
      super.noSuchMethod(Invocation.setter(#addresses, _addresses),
          returnValueForMissingStub: null);
  @override
  Duration get checkInterval => (super.noSuchMethod(
          Invocation.getter(#checkInterval),
          returnValue: _FakeDuration_8(this, Invocation.getter(#checkInterval)))
      as Duration);
  @override
  set checkInterval(Duration? _checkInterval) =>
      super.noSuchMethod(Invocation.setter(#checkInterval, _checkInterval),
          returnValueForMissingStub: null);
  @override
  List<_i7.AddressCheckResult> get lastTryResults => (super.noSuchMethod(
      Invocation.getter(#lastTryResults),
      returnValue: <_i7.AddressCheckResult>[]) as List<_i7.AddressCheckResult>);
  @override
  _i9.Future<bool> get hasConnection =>
      (super.noSuchMethod(Invocation.getter(#hasConnection),
          returnValue: _i9.Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<_i7.DataConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(Invocation.getter(#connectionStatus),
              returnValue: _i9.Future<_i7.DataConnectionStatus>.value(
                  _i7.DataConnectionStatus.disconnected))
          as _i9.Future<_i7.DataConnectionStatus>);
  @override
  _i9.Stream<_i7.DataConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(Invocation.getter(#onStatusChange),
              returnValue: _i9.Stream<_i7.DataConnectionStatus>.empty())
          as _i9.Stream<_i7.DataConnectionStatus>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  bool get isActivelyChecking =>
      (super.noSuchMethod(Invocation.getter(#isActivelyChecking),
          returnValue: false) as bool);
  @override
  _i9.Future<_i7.AddressCheckResult> isHostReachable(
          _i7.AddressCheckOptions? options) =>
      (super.noSuchMethod(Invocation.method(#isHostReachable, [options]),
              returnValue: _i9.Future<_i7.AddressCheckResult>.value(
                  _FakeAddressCheckResult_9(
                      this, Invocation.method(#isHostReachable, [options]))))
          as _i9.Future<_i7.AddressCheckResult>);
}
